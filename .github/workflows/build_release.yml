name: AutoNote release
env:
  VERSION: '0.0.31' # TODO: Change after tests.
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'website/**'
      - '**.yml'
jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create file
        run: touch /home/runner/work/AutoNote/AutoNote/app/google-services.json | base64
      - name: Putting data
        env:
            DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/AutoNote/AutoNote/app/google-services.json
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: "11"
          cache: 'gradle'
      - name: Set execution flag for gradlew
        run: chmod +x gradlew
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Build AutoNote
        run: ./gradlew assembleRelease
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ github.event.repository.name }} v${{ env.VERSION }}
          prerelease: true
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-release-unsigned-signed.apk
          asset_name: ${{ github.event.repository.name }}.apk
          asset_content_type: application/apk